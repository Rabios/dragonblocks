// Do not edit this file; automatically generated by Rabia Alhaffar XD

/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(['./blockly_compressed.js'], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require('./blockly_compressed.js'));
  } else { // Browser
    root.Blockly.Ruby = factory(root.Blockly);
  }
}(this, function(Blockly) {
  'use strict';
  
  // ruby.js
  Blockly.Ruby=new Blockly.Generator("Ruby"),Blockly.Ruby.addReservedWords("HTTP,__ENCODING__,__LINE__,__FILE__,BEGIN,END,alias,and,begin,break,case,class,def,defined?,do,else,elsif,end,ensure,false,for,if,in,module,next,nil,not,or,redo,rescue,require,retry,return,self,super,then,true,undef,unless,until,when,while,yield,__ary_cmp,__ary_eq,__ary_index,__case_eqq,__coerce_step_counter,__delete,__lines,__method__,__printstr__,__sub_replace,__svalue,__to_int,__to_str,_check_readable,_inspect,_is_socket=,_read_buf,_recvfrom,_setnonblock,_sockaddr_in,_to_array,`,abs,abs2,accept,accept_nonblock,addr,afamily,alive?,all?,any?,arg,arity,asctime,assoc,at,attr_accessor,backtrace,between?,bind,bind_call,block_given?,bool,bsearch,bsearch_index,bytes,bytesize,byteslice,call,canonname,capitalize,capitalize!,casecmp,casecmp?,ceil,chain,chars,chomp,chomp!,chop,chop!,chr,clamp,class,clear,clone,close,close_on_exec=,close_on_exec?,close_write,closed?,codepoints,collect,collect!,combination,compact,compact!,concat,concat_path,conjugate,connect,connect_nonblock,count,cover?,ctime,curry,cycle,data,day,default,default=,default_proc,default_proc=,define_singleton_method,delete,delete!,delete_at,delete_if,delete_prefix,delete_prefix!,delete_suffix,delete_suffix!,detect,difference,dig,div,divmod,do_not_reverse_lookup,downcase,downcase!,downto,drop,drop_while,dst?,dump,dup,each,each_byte,each_char,each_cons,each_index,each_key,each_line,each_pair,each_slice,each_value,each_with_index,each_with_object,empty?,end_with?,entries,eof?,eql?,exception,extend,family,fdiv,feed,fetch,fetch_values,fib,fileno,fill,filter_map,find_all,find_index,finite?,first,flat_map,flatten,flatten!,flock,floor,flush,format,freeze,friday?,frozen?,getbyte,getc,getgm,getlocal,getnameinfo,getpeereid,getpeername,gets,getsockname,getsockopt,getutc,global_variables,gmt?,gmtime,grep,group_by,gsub,gsub!,has_key?,has_value?,hash,hex,hour,id2name,include,include?,index,infinite?,initialize,initialize_copy,inject,insert,inspect,inspect_sockaddr,instance_of?,instance_defined?,instance_get,instance_set,instance_variables,int,intern,intersection,invert,ip?,ip_address,ip_port,ip_unpack,ipv4?,ipv6?,is_a?,isatty,iterator?,join,keep_if,key,key?,keys,kind_of?,last,lazy,length,level,lines,linger,listen,ljust,local_address,local_variables,localtime,loop,lstrip,lstrip!,map,max,max_by,mday,member?,members,merge,merge!,message,meth,method_missing,methods,min,min_by,minmax,minmax_by,mon,monday?,month,mtime,name,nan?,negative?,next,next!,next_values,nil?,none?,nonzero?,obj,object_id,oct,one?,open,optname,ord,owner,p,parameters,partition,path,peek,peek_values,peeraddr,permutation,pfamily,pid,polar,pop,pos,pos=,positive?,prepend,print,printf,private_methods,protected_methods,protocol,public_methods,push,puts,quo,raise,rand,rassoc,read,readchar,readline,readlines,real?,receiver,rectangular,recv,recv_nonblock,recvfrom,recvfrom_nonblock,rehash,reject,reject!,remote_address,remove_instance_variable,replace,respond_to?,result,resume,reverse,reverse!,reverse_each,rewind,rindex,rjust,rotate,rotate!,round,rpartition,rstrip,rstrip!,saturday?,sec,seek,select,select!,send,set_backtrace,setbyte,setsockopt,shift,shutdown,singleton_class,singleton_method,singleton_methods,size,slice,slice!,socktype,sort,sort!,sort_by,source_location,split,sprintf,squeeze,squeeze!,srand,start_with?,step,store,strip,strip!,sub,sub!,succ,succ!,sunday?,super_method,swapcase,swapcase!,sync,sync=,sysaccept,sysread,sysseek,syswrite,take,take_while,tally,tap,thursday?,times,to_a,to_enum,to_f,to_h,to_i,to_int,to_proc,to_r,to_s,to_sockaddr,to_str,to_sym,tr,tr!,tr_s,tr_s!,transfer,transform_keys,transform_keys!,transform_values,transform_values!,transpose,truncate,tuesday?,unbind,ungetc,union,uniq,uniq!,unix?,unix_path,unpack,unshift,upcase,upcase!,upto,usec,utc,utc?,value?,values,values_at,wday,wednesday?,with_index,with_object,write,yday,year,yield,yield_self,zero?,zip,zone,A,A::B,Addrinfo,ArgumentError,Array,Base,BasicSocket,BinTest_MrubyBinDebugger,CRubyExtension,Comparable,Complex,ComplexLikeNumeric,CustomExp,Derived,EOFError,Enumerable,Enumerator,Enumerator::Chain,Enumerator::Generator,Enumerator::Lazy,Enumerator::Yielder,Errno,File,File::Constants,File::FileError,File::NoFileError,File::PermissionError,File::UnableToStat,Fixnum,Float,FloatDomainError,Foo,FrozenError,Hash,HellRaiser,IO,IOError,IPSocket,IndexError,InlineStructTest,Integer,Integral,Interpreter,Isect,Kernel,KeyError,KlassWithSecret,LocalJumpError,MRuby,Math,Method,MiniRake â†’ MiniRake,MiniRake::DSL,MiniRake::FileTask,MiniRake::Task,Module,NameError,NoMethodError,NotImplementedError,Numeric,Object,Outer,Outer::Inner,Plane,Proc,Rake,RakeApp,Rand,Range,RangeError,Rational,Ray,RegexpError,RubyExtension,Scene,SetOuter,Socket,Socket::Option,SocketError,Sphere,StopIteration,String,Struct,Symbol,TCPServer,TCPSocket,Test4ClassVariableDefined,Test4ClassVariableGet,Test4ClassVariableSet,Test4ClassVariables1,Test4ClassVariables2,Test4InstanceMethodsA,Test4InstanceMethodsB,Test4InstanceMethods,Test4ModuleNesting,Test4ModuleNesting::Test4ModuleNesting2,Test4RemoveClassVariable,Test4RemoveMethod,Test4RemoveMethod::Child,Test4RemoveMethod::Parent,Test4includedModules,Test4includedModules2,TestA,TestB,TestEvalConstScope,Time,ToplevelTestModule1,ToplevelTestModule2,TypeError,UDPSocket,UNIXServer,UNIXSocket,UserDefinedNumeric,Vec,"),Blockly.Ruby.ORDER_ATOMIC=0,Blockly.Ruby.ORDER_HIGH=1,Blockly.Ruby.ORDER_EXPONENTIATION=2,Blockly.Ruby.ORDER_UNARY=3,Blockly.Ruby.ORDER_MULTIPLICATIVE=4,Blockly.Ruby.ORDER_ADDITIVE=5,Blockly.Ruby.ORDER_CONCATENATION=6,Blockly.Ruby.ORDER_RELATIONAL=7,Blockly.Ruby.ORDER_AND=8,Blockly.Ruby.ORDER_OR=9,Blockly.Ruby.ORDER_NONE=99,Blockly.Ruby.isInitialized=!1,Blockly.Ruby.init=function(e){Object.getPrototypeOf(this).init.call(this),this.nameDB_?this.nameDB_.reset():this.nameDB_=new Blockly.Names(this.RESERVED_WORDS_),this.nameDB_.setVariableMap(e.getVariableMap()),this.nameDB_.populateVariables(e),this.nameDB_.populateProcedures(e),this.isInitialized=!0},Blockly.Ruby.finish=function(e){var t=Blockly.utils.object.values(this.definitions_);return e=Object.getPrototypeOf(this).finish.call(this,e),this.isInitialized=!1,this.nameDB_.reset(),t.join("\n\n")+"\n\n\n"+e},Blockly.Ruby.scrubNakedValue=function(e){},Blockly.Ruby.quote_=function(e){return'"'+(e=e.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/'/g,"\\'"))+'"'},Blockly.Ruby.multiline_quote_=function(e){return e.split(/\n/g).map(this.quote_).join("#{'\\n'}\n")},Blockly.Ruby.scrub_=function(e,t,r){var n="";if(!e.outputConnection||!e.outputConnection.targetConnection){var o=e.getCommentText();o&&(o=Blockly.utils.string.wrap(o,this.COMMENT_WRAP-3),n+=this.prefixLines(o,"# ")+"\n");for(var a,i=0;i<e.inputList.length;i++)e.inputList[i].type!=Blockly.inputTypes.VALUE||(a=e.inputList[i].connection.targetBlock())&&(o=this.allNestedComments(a))&&(n+=this.prefixLines(o,"# "))}var s=e.nextConnection&&e.nextConnection.targetBlock();return n+t+(r?"":this.blockToCode(s))};
  
  // ruby/variables.js
  Blockly.Ruby.variables_get=function(l){return[Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.variables_set=function(l){var e=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"0";return Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME)+" = "+e+"\n"};
  
  // ruby/variables_dynamic.js
  Blockly.Ruby.variables_get_dynamic=Blockly.Ruby.variables_get,Blockly.Ruby.variables_set_dynamic=Blockly.Ruby.variables_set;
  
  // ruby/loops.js
  Blockly.Ruby.controls_repeat_ext=function(l){var o;o=l.getField("TIMES")?String(Number(l.getFieldValue("TIMES"))):Blockly.Ruby.valueToCode(l,"TIMES",Blockly.Ruby.ORDER_NONE)||"0",o=Blockly.isNumber(o)?parseInt(o,10):"("+o+").floor";var e=Blockly.Ruby.statementToCode(l,"DO");return o+".times {\n"+(e=Blockly.Ruby.addLoopTrap(e,l))+"}\n"},Blockly.Ruby.controls_repeat=Blockly.Ruby.controls_repeat_ext,Blockly.Ruby.controls_whileUntil=function(l){var o="UNTIL"==l.getFieldValue("MODE"),e=Blockly.Ruby.valueToCode(l,"BOOL",o?Blockly.Ruby.ORDER_UNARY:Blockly.Ruby.ORDER_NONE)||"false",y=Blockly.Ruby.statementToCode(l,"DO");return o&&(e="!"+e),"while "+e+"\n"+(y=Blockly.Ruby.addLoopTrap(y,l))+"end\n"},Blockly.Ruby.controls_for=function(l){var o,e=Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),y=Blockly.Ruby.valueToCode(l,"FROM",Blockly.Ruby.ORDER_NONE)||"0",u=Blockly.Ruby.valueToCode(l,"TO",Blockly.Ruby.ORDER_NONE)||"0",c=Blockly.Ruby.valueToCode(l,"BY",Blockly.Ruby.ORDER_NONE)||"1",R=Blockly.Ruby.statementToCode(l,"DO"),R=Blockly.Ruby.addLoopTrap(R,l),l="";Blockly.isNumber(y)&&Blockly.isNumber(u)&&Blockly.isNumber(c)?o=(Number(y)<=Number(u)?"":"-")+Math.abs(Number(c)):(l="",l+=(o=Blockly.Ruby.nameDB_.getDistinctName(e+"_inc",Blockly.VARIABLE_CATEGORY_NAME))+" = ",Blockly.isNumber(c)?l+=Math.abs(c)+"\n":l+="("+c+").abs\n",l+="if ("+y+") > ("+u+")\n",l+=Blockly.Ruby.INDENT+o+" = -"+o+"\n",l+="end\n");Blockly.Ruby.nameDB_.getDistinctName(e,Blockly.VARIABLE_CATEGORY_NAME);return l+=y+".step("+u+","+o+") { |"+e+"|\n"+R+"}\n"},Blockly.Ruby.controls_forEach=function(l){var o=Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),e=Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_NONE)||"[]",y=Blockly.Ruby.statementToCode(l,"DO");return e+".each do |"+o+"|\n"+(y=Blockly.Ruby.addLoopTrap(y,l))+"end\n"},Blockly.Ruby.controls_flow_statements=function(l){var o,e="";switch(Blockly.Ruby.STATEMENT_PREFIX&&(e+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_PREFIX,l)),Blockly.Ruby.STATEMENT_SUFFIX&&(e+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_SUFFIX,l)),!Blockly.Ruby.STATEMENT_PREFIX||(o=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(l))&&!o.suppressPrefixSuffix&&(e+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_PREFIX,o)),l.getFieldValue("FLOW")){case"BREAK":return e+"break\n";case"CONTINUE":return e+"continue\n"}throw Error("Unknown flow statement.")};

  // ruby/logic.js
  Blockly.Ruby.controls_if=function(l){var y,o,R=0,u="";for(Blockly.Ruby.STATEMENT_PREFIX&&(u+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_PREFIX,l));o=Blockly.Ruby.valueToCode(l,"IF"+R,Blockly.Ruby.ORDER_NONE)||"false",y=Blockly.Ruby.statementToCode(l,"DO"+R),Blockly.Ruby.STATEMENT_SUFFIX&&(y=Blockly.Ruby.prefixLines(Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_SUFFIX,l),Blockly.Ruby.INDENT)+y),u+=(0<R?"else":"")+"if "+o+" \n"+y,++R,l.getInput("IF"+R););return(l.getInput("ELSE")||Blockly.Ruby.STATEMENT_SUFFIX)&&(y=Blockly.Ruby.statementToCode(l,"ELSE"),Blockly.Ruby.STATEMENT_SUFFIX&&(y=Blockly.Ruby.prefixLines(Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_SUFFIX,l),Blockly.Ruby.INDENT)+y),u+="else\n"+y),u+"end\n"},Blockly.Ruby.controls_ifelse=Blockly.Ruby.controls_if,Blockly.Ruby.logic_compare=function(l){var y={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[l.getFieldValue("OP")];return[(Blockly.Ruby.valueToCode(l,"A",Blockly.Ruby.ORDER_RELATIONAL)||"0")+" "+y+" "+(Blockly.Ruby.valueToCode(l,"B",Blockly.Ruby.ORDER_RELATIONAL)||"0"),Blockly.Ruby.ORDER_RELATIONAL]},Blockly.Ruby.logic_operation=function(l){var y="AND"==l.getFieldValue("OP")?"&&":"||",o="and"==y?Blockly.Ruby.ORDER_AND:Blockly.Ruby.ORDER_OR,R=Blockly.Ruby.valueToCode(l,"A",o),u=Blockly.Ruby.valueToCode(l,"B",o);return u=R||u?(l="&&"==y?"true":"false",R=R||l,u||l):R="false",[R+" "+y+" "+u,o]},Blockly.Ruby.logic_negate=function(l){return["!"+(Blockly.Ruby.valueToCode(l,"BOOL",Blockly.Ruby.ORDER_UNARY)||"true"),Blockly.Ruby.ORDER_UNARY]},Blockly.Ruby.logic_boolean=function(l){return["TRUE"==l.getFieldValue("BOOL")?"true":"false",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.logic_null=function(l){return["nil",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.logic_ternary=function(l){return[(Blockly.Ruby.valueToCode(l,"IF",Blockly.Ruby.ORDER_AND)||"false")+" ? "+(Blockly.Ruby.valueToCode(l,"THEN",Blockly.Ruby.ORDER_AND)||"nil")+" : "+(Blockly.Ruby.valueToCode(l,"ELSE",Blockly.Ruby.ORDER_OR)||"nil"),Blockly.Ruby.ORDER_OR]};
  
  // ruby/procedures.js
  Blockly.Ruby.procedures_defreturn=function(l){var y=Blockly.Ruby.nameDB_.getName(l.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),e="";Blockly.Ruby.STATEMENT_PREFIX&&(e+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_PREFIX,l)),Blockly.Ruby.STATEMENT_SUFFIX&&(e+=Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_SUFFIX,l)),e=e&&Blockly.Ruby.prefixLines(e,Blockly.Ruby.INDENT);var u="";Blockly.Ruby.INFINITE_LOOP_TRAP&&(u=Blockly.Ruby.prefixLines(Blockly.Ruby.injectId(Blockly.Ruby.INFINITE_LOOP_TRAP,l),Blockly.Ruby.INDENT));var o=Blockly.Ruby.statementToCode(l,"STACK"),R=Blockly.Ruby.valueToCode(l,"RETURN",Blockly.Ruby.ORDER_NONE)||"",c=o&&R?e:"";R?R=Blockly.Ruby.INDENT+"return "+R+"\n":o=o||"";for(var r=[],n=l.getVars(),B=0;B<n.length;B++)r[B]=Blockly.Ruby.nameDB_.getName(n[B],Blockly.VARIABLE_CATEGORY_NAME);R="def "+y+"("+r.join(", ")+")\n"+e+u+o+c+R+"end\n",R=Blockly.Ruby.scrub_(l,R);return Blockly.Ruby.definitions_["%"+y]=R,null},Blockly.Ruby.procedures_defnoreturn=Blockly.Ruby.procedures_defreturn,Blockly.Ruby.procedures_callreturn=function(l){for(var y=Blockly.Ruby.nameDB_.getName(l.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),e=[],u=l.getVars(),o=0;o<u.length;o++)e[o]=Blockly.Ruby.valueToCode(l,"ARG"+o,Blockly.Ruby.ORDER_NONE)||"nil";return[y+"("+e.join(", ")+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.procedures_callnoreturn=function(l){return Blockly.Ruby.procedures_callreturn(l)[0]+"\n"},Blockly.Ruby.procedures_ifreturn=function(l){var y="if "+(Blockly.Ruby.valueToCode(l,"CONDITION",Blockly.Ruby.ORDER_NONE)||"false")+"\n";return Blockly.Ruby.STATEMENT_SUFFIX&&(y+=Blockly.Ruby.prefixLines(Blockly.Ruby.injectId(Blockly.Ruby.STATEMENT_SUFFIX,l),Blockly.Ruby.INDENT)),l.hasReturnValue_?(l=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"nil",y+=Blockly.Ruby.INDENT+"return "+l+"\n"):y+=Blockly.Ruby.INDENT+"return\n",y+="end\n"};
  
  // ruby/text.js
  Blockly.Ruby.text=function(l){return[Blockly.Ruby.quote_(l.getFieldValue("TEXT")),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.text_multiline=function(l){var e=Blockly.Ruby.multiline_quote_(l.getFieldValue("TEXT")),l=-1!=e.indexOf("+")?Blockly.Ruby.ORDER_CONCATENATION:Blockly.Ruby.ORDER_ATOMIC;return[e,l]},Blockly.Ruby.text_join=function(l){if(0==l.itemCount_)return["''",Blockly.Ruby.ORDER_ATOMIC];if(1==l.itemCount_)return["("+(Blockly.Ruby.valueToCode(l,"ADD0",Blockly.Ruby.ORDER_NONE)||"''")+").to_str",Blockly.Ruby.ORDER_HIGH];if(2==l.itemCount_)return[(Blockly.Ruby.valueToCode(l,"ADD0",Blockly.Ruby.ORDER_CONCATENATION)||"''")+" + "+(Blockly.Ruby.valueToCode(l,"ADD1",Blockly.Ruby.ORDER_CONCATENATION)||"''"),Blockly.Ruby.ORDER_CONCATENATION];for(var e=[],R=0;R<l.itemCount_;R++)e[R]=Blockly.Ruby.valueToCode(l,"ADD"+R,Blockly.Ruby.ORDER_NONE)||"''";return["(["+e.join(", ")+']).join(", ")',Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_append=function(l){return Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME)+" += "+(Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_CONCATENATION)||"''")+"\n"},Blockly.Ruby.text_length=function(l){return[(Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_UNARY)||"''")+".length",Blockly.Ruby.ORDER_UNARY]},Blockly.Ruby.text_isEmpty=function(l){return[(Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_UNARY)||"''")+".empty?",Blockly.Ruby.ORDER_RELATIONAL]},Blockly.Ruby.text_indexOf=function(l){var e=Blockly.Ruby.valueToCode(l,"FIND",Blockly.Ruby.ORDER_NONE)||"''",R=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"''";return[("FIRST"==l.getFieldValue("END")?Blockly.Ruby.provideFunction_("firstIndexOf",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(str, substr) ","  return (str.index(substr) == nil) ? 0 : i","end"]):Blockly.Ruby.provideFunction_("lastIndexOf",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(str, substr)","  i = (str).rindex(substr)","  return (i == nil) ? 0 : i","end"]))+"("+R+", "+e+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_charAt=function(l){var e=l.getFieldValue("WHERE")||"FROM_START",R="FROM_END"==e?Blockly.Ruby.ORDER_UNARY:Blockly.Ruby.ORDER_NONE,R=Blockly.Ruby.valueToCode(l,"AT",R)||"1",l=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"''";if("RANDOM"==e){Blockly.Ruby.provideFunction_("text_random_letter",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(str)","  return str[rand(str.length)]","end"]);var o=functionName+"("+l+")"}else{if("FIRST"==e)var u="0";else if("LAST"==e)u="-1";else if("FROM_START"==e)u=R;else{if("FROM_END"!=e)throw Error("Unhandled option (text_charAt).");u="-"+R}o=u.match(/^-?\w*$/)?l+"["+u+"]":"("+l+")["+u+"]"}return[o,Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_getSubstring=function(l){var e=Blockly.Ruby.valueToCode(l,"STRING",Blockly.Ruby.ORDER_NONE)||"''",R=l.getFieldValue("WHERE1"),o="FROM_END"==R?Blockly.Ruby.ORDER_UNARY:Blockly.Ruby.ORDER_NONE,o=Blockly.Ruby.valueToCode(l,"AT1",o)||"0";if("FIRST"==R)var u=0;else if("FROM_START"==R)u=o;else{if("FROM_END"!=R)throw Error("Unhandled option (text_getSubstring)");u="-"+o}R=l.getFieldValue("WHERE2"),o="FROM_END"==R?Blockly.Ruby.ORDER_UNARY:Blockly.Ruby.ORDER_NONE,o=Blockly.Ruby.valueToCode(l,"AT2",o)||"0";if("LAST"==R)var y=-1;else if("FROM_START"==R)y=o;else{if("FROM_END"!=R)throw Error("Unhandled option (text_getSubstring)");y="-"+o}return[e+"["+u+".."+y+"]",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_changeCase=function(l){var e,R=l.getFieldValue("CASE"),l=Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''";return"UPPERCASE"==R?e=".upcase":"LOWERCASE"==R?e=".downcase":"TITLECASE"==R&&(e=Blockly.Ruby.provideFunction_("text_titlecase",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(str)","  buf = []","  inWord = false","  str.length.times.map do |i|","    c = str[i]","    if inWord","      buf.push(c.downcase)",'      if c.include?(" ") then',"        inWord = false","      end","    else","      buf.push(c.upcase)","      inWord = true","    end","  end","  return buf.join","end"])),["("+l+")"+e,Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_trim=function(l){var e={LEFT:"^%s*(,-)",RIGHT:"(.-)%s*$",BOTH:"^%s*(.-)%s*$"}[l.getFieldValue("MODE")];return[(Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''")+'.gsub("'+e+'", "%1")',Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_print=function(l){return"puts("+(Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''")+")\n"},Blockly.Ruby.text_prompt_ext=function(l){e=l.getField("TEXT")?Blockly.Ruby.quote_(l.getFieldValue("TEXT")):Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''";var e=Blockly.Ruby.provideFunction_("text_prompt",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(msg)","  STDOUT.write(msg)","  STDOUT.flush","  return gets.chomps","end"])+"("+e+")";return"NUMBER"==l.getFieldValue("TYPE")&&(e="("+e+").to_i(10)"),[e,Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_prompt=Blockly.Ruby.text_prompt_ext,Blockly.Ruby.text_count=function(l){var e=Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''",l=Blockly.Ruby.valueToCode(l,"SUB",Blockly.Ruby.ORDER_NONE)||"''";return[Blockly.Ruby.provideFunction_("text_count",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(haystack, needle)","  # Source: https://stackoverflow.com/a/25938828/10896648","  return haystack.each_char.each_cons(needle.length).map(&:join).count(needle)","end"])+"("+e+", "+l+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_replace=function(l){return["("+(Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''")+").gsub("+(Blockly.Ruby.valueToCode(l,"FROM",Blockly.Ruby.ORDER_NONE)||"''")+", "+(Blockly.Ruby.valueToCode(l,"TO",Blockly.Ruby.ORDER_NONE)||"''")+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.text_reverse=function(l){return[(Blockly.Ruby.valueToCode(l,"TEXT",Blockly.Ruby.ORDER_NONE)||"''")+".reverse",Blockly.Ruby.ORDER_HIGH]};
  
  // ruby/math.js
  Blockly.Ruby.math_number=function(l){l=Number(l.getFieldValue("NUM"));return[l,l<0?Blockly.Ruby.ORDER_UNARY:Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.math_arithmetic=function(l){var e={ADD:[" + ",Blockly.Ruby.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Ruby.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Ruby.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Ruby.ORDER_MULTIPLICATIVE],POWER:[" ^ ",Blockly.Ruby.ORDER_EXPONENTIATION]}[l.getFieldValue("OP")],o=e[0],e=e[1];return[(Blockly.Ruby.valueToCode(l,"A",e)||"0")+o+(Blockly.Ruby.valueToCode(l,"B",e)||"0"),e]},Blockly.Ruby.math_single=function(l){var e,o,a=l.getFieldValue("OP");if("NEG"==a)return["-"+(o=Blockly.Ruby.valueToCode(l,"NUM",Blockly.Ruby.ORDER_UNARY)||"0"),Blockly.Ruby.ORDER_UNARY];if("POW10"==a)return["10 ^ "+(o=Blockly.Ruby.valueToCode(l,"NUM",Blockly.Ruby.ORDER_EXPONENTIATION)||"0"),Blockly.Ruby.ORDER_EXPONENTIATION];switch(o="ROUND"==a?Blockly.Ruby.valueToCode(l,"NUM",Blockly.Ruby.ORDER_ADDITIVE)||"0":Blockly.Ruby.valueToCode(l,"NUM",Blockly.Ruby.ORDER_NONE)||"0",a){case"ABS":e="("+o+").abs";break;case"ROOT":e="Math.sqrt("+o+")";break;case"LN":e="Math.log("+o+")";break;case"LOG10":e="Math.log10("+o+")";break;case"EXP":e="Math.exp("+o+")";break;case"ROUND":e="("+o+" + 0.5).floor";break;case"ROUNDUP":e="("+o+").ceil";break;case"ROUNDDOWN":e="("+o+").floor";break;case"SIN":e="Math.sin(("+o+") * 180 / Math::PI)";break;case"COS":e="Math.cos(("+o+") * 180 / Math::PI)";break;case"TAN":e="Math.tan(("+o+") * 180 / Math::PI)";break;case"ASIN":e="Math.asin("+o+")) * 180 / Math::PI";break;case"ACOS":e="Math.acos("+o+")) * 180 / Math::PI";break;case"ATAN":e="Math.atan("+o+")) * 180 / Math::PI";break;default:throw Error("Unknown math operator: "+a)}return[e,Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.math_constant=function(l){return{PI:["Math::PI",Blockly.Ruby.ORDER_HIGH],E:["Math.exp(1)",Blockly.Ruby.ORDER_HIGH],GOLDEN_RATIO:["(1 + Math.sqrt(5)) / 2",Blockly.Ruby.ORDER_MULTIPLICATIVE],SQRT2:["Math.sqrt(2)",Blockly.Ruby.ORDER_HIGH],SQRT1_2:["Math.sqrt(1 / 2)",Blockly.Ruby.ORDER_HIGH],INFINITY:["Float::INFINITY",Blockly.Ruby.ORDER_HIGH]}[l.getFieldValue("CONSTANT")]},Blockly.Ruby.math_number_property=function(l){var e,o=Blockly.Ruby.valueToCode(l,"NUMBER_TO_CHECK",Blockly.Ruby.ORDER_MULTIPLICATIVE)||"0",a=l.getFieldValue("PROPERTY");if("PRIME"==a)return[e=Blockly.Ruby.provideFunction_("math_isPrime",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(num)","  (2..(num - 1)).each do |n|","    return false if num % n == 0","  end","  return true","end"])+"("+o+")",Blockly.Ruby.ORDER_HIGH];switch(a){case"EVEN":e=o+" % 2 == 0";break;case"ODD":e=o+" % 2 == 1";break;case"WHOLE":e=o+" % 1 == 0";break;case"POSITIVE":e=o+" > 0";break;case"NEGATIVE":e=o+" < 0";break;case"DIVISIBLE_BY":var R=Blockly.Ruby.valueToCode(l,"DIVISOR",Blockly.Ruby.ORDER_MULTIPLICATIVE);if(!R||"0"==R)return["nil",Blockly.Ruby.ORDER_ATOMIC];e=o+" % "+R+" == 0"}return[e,Blockly.Ruby.ORDER_RELATIONAL]},Blockly.Ruby.math_change=function(l){var e=Blockly.Ruby.valueToCode(l,"DELTA",Blockly.Ruby.ORDER_ADDITIVE)||"0";return Blockly.Ruby.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME)+" += "+e+"\n"},Blockly.Ruby.math_round=Blockly.Ruby.math_single,Blockly.Ruby.math_trig=Blockly.Ruby.math_single,Blockly.Ruby.math_on_list=function(l){var e,o=l.getFieldValue("OP"),l=Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_NONE)||"[]";function a(){return Blockly.Ruby.provideFunction_("math_sum",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  result = 0","  arr.each do |v|","    result +=  v","  end","  return result","end"])}switch(o){case"SUM":e=a();break;case"MIN":e=Blockly.Ruby.provideFunction_("math_min",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  return arr.min","end"]);break;case"AVERAGE":e=Blockly.Ruby.provideFunction_("math_average",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  if arr.length == 0 then","    return 0","  end","  return "+a()+"(arr) / arr.length","end"]);break;case"MAX":e=Blockly.Ruby.provideFunction_("math_max",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  return arr.max","end"]);break;case"MEDIAN":e=Blockly.Ruby.provideFunction_("math_median",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  # Source: https://stackoverflow.com/a/14859546/10896648","  return nil if array.empty?","  sorted = array.sort","  len = sorted.length","  (sorted[(len - 1) / 2] + sorted[len / 2]) / 2.0","end"]);break;case"MODE":e=Blockly.Ruby.provideFunction_("math_modes",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  # Source: https://stackoverflow.com/a/26250044/10896648","  hash = Hash.new(0)","  arr.each do |i|","    hash[i] += 1","  end","  return hash","end"]);break;case"STD_DEV":e=Blockly.Ruby.provideFunction_("math_standard_deviation",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  # Source: https://stackoverflow.com/a/7749613/10896648","  m = arr.inject(0) { |accum, i| accum + i } / arr.length.to_f","  sum = arr.inject(0) { |accum, i| accum + (i - m) ** 2 }","  return Math.sqrt(sum /= (arr.length - 1).to_f)","end"]);break;case"RANDOM":e=Blockly.Ruby.provideFunction_("math_random_list",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(arr)","  len = arr.length","  if len == 0 then","    return nil","  end","  return arr[rand(len)]","end"]);break;default:throw Error("Unknown operator: "+o)}return[e+"("+l+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.math_modulo=function(l){return[(Blockly.Ruby.valueToCode(l,"DIVIDEND",Blockly.Ruby.ORDER_MULTIPLICATIVE)||"0")+" % "+(Blockly.Ruby.valueToCode(l,"DIVISOR",Blockly.Ruby.ORDER_MULTIPLICATIVE)||"0"),Blockly.Ruby.ORDER_MULTIPLICATIVE]},Blockly.Ruby.math_constrain=function(l){return["[["+(Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"0")+", "+(Blockly.Ruby.valueToCode(l,"LOW",Blockly.Ruby.ORDER_NONE)||"-Float::INFINITY")+"].max, "+(Blockly.Ruby.valueToCode(l,"HIGH",Blockly.Ruby.ORDER_NONE)||"Float::INFINITY")+"].min",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.math_random_int=function(l){var e=Blockly.Ruby.valueToCode(l,"FROM",Blockly.Ruby.ORDER_NONE)||"0";return["(rand("+(Blockly.Ruby.valueToCode(l,"TO",Blockly.Ruby.ORDER_NONE)||"0")+"-1)+"+e+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.math_random_float=function(l){return["rand()",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.math_atan2=function(l){var e=Blockly.Ruby.valueToCode(l,"X",Blockly.Ruby.ORDER_NONE)||"0";return["Math.atan2("+(Blockly.Ruby.valueToCode(l,"Y",Blockly.Ruby.ORDER_NONE)||"0")+", "+e+") * 180 / Math::PI",Blockly.Ruby.ORDER_HIGH]};
  
  // ruby/colour.js
  Blockly.Ruby.colour_picker=function(o){return[Blockly.Ruby.quote_(o.getFieldValue("COLOUR")),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.colour_random=function(o){return['"#%06x" % [rand(0, 2^24 - 1)]',Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.colour_rgb=function(o){return[Blockly.Ruby.provideFunction_("colour_rgb",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b)","  r = ([100, [0, r].max].min * 2.55 + 0.5).floor","  g = ([100, [0, g].max].min * 2.55 + 0.5).floor","  b = ([100, [0, b].max].min * 2.55 + 0.5).floor",'  return "#%02x%02x%02x" % [r, g, b]',"end"])+"("+(Blockly.Ruby.valueToCode(o,"RED",Blockly.Ruby.ORDER_NONE)||0)+", "+(Blockly.Ruby.valueToCode(o,"GREEN",Blockly.Ruby.ORDER_NONE)||0)+", "+(Blockly.Ruby.valueToCode(o,"BLUE",Blockly.Ruby.ORDER_NONE)||0)+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.colour_blend=function(o){return[Blockly.Ruby.provideFunction_("colour_blend",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio)","  r1 = colour1[1 .. 2].to_i(16)","  r2 = colour2[1 .. 2].to_i(16)","  g1 = colour1[3 .. 4].to_i(16)","  g2 = colour2[3 .. 4].to_i(16)","  b1 = colour1[5 .. 6].to_i(16)","  b2 = colour2[5 .. 6].to_i(16)","  ratio = [1, [0, ratio].max].min","  r = (r1 * (1 - ratio) + r2 * ratio + .5).floor","  g = (g1 * (1 - ratio) + g2 * ratio + .5).floor","  b = (b1 * (1 - ratio) + b2 * ratio + .5).floor",'  return "#%02x%02x%02x" % [r, g, b]',"end"])+"("+(Blockly.Ruby.valueToCode(o,"COLOUR1",Blockly.Ruby.ORDER_NONE)||"'#000000'")+", "+(Blockly.Ruby.valueToCode(o,"COLOUR2",Blockly.Ruby.ORDER_NONE)||"'#000000'")+", "+(Blockly.Ruby.valueToCode(o,"RATIO",Blockly.Ruby.ORDER_NONE)||0)+")",Blockly.Ruby.ORDER_HIGH]};
  
  // ruby/lists.js
  Blockly.Ruby.lists_create_empty=function(l){return["[]",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_create_with=function(l){for(var R=new Array(l.itemCount_),o=0;o<l.itemCount_;o++)R[o]=Blockly.Ruby.valueToCode(l,"ADD"+o,Blockly.Ruby.ORDER_NONE)||"None";return["["+R.join(", ")+"]",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_repeat=function(l){var R=Blockly.Ruby.valueToCode(l,"ITEM",Blockly.Ruby.ORDER_NONE)||"None";return["("+(Blockly.Ruby.valueToCode(l,"NUM",Blockly.Ruby.ORDER_NONE)||"0")+").map {"+R+"}",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_length=function(l){return[(Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_UNARY)||"[]")+".length",Blockly.Ruby.ORDER_UNARY]},Blockly.Ruby.lists_isEmpty=function(l){return[(Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_UNARY)||"[]")+".empty?",Blockly.Ruby.ORDER_RELATIONAL]},Blockly.Ruby.lists_indexOf=function(l){var R=Blockly.Ruby.valueToCode(l,"FIND",Blockly.Ruby.ORDER_NONE)||"''",o=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_NONE)||"[]";return"FIRST"==l.getFieldValue("END")?[o+".index("+R+")",Blockly.Ruby.ORDER_HIGH]:[o+".rindex("+R+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists={},Blockly.Ruby.lists.getIndex_=function(l,R,o){return"FIRST"==R?"0":"FROM_END"==R?"-"+o:"LAST"==R?"-1":"RANDOM"==R?"rand("+l+".length)":o},Blockly.Ruby.lists_getIndex=function(l){var R=l.getFieldValue("MODE")||"GET",o=l.getFieldValue("WHERE")||"FROM_START",e=Blockly.Ruby.valueToCode(l,"VALUE",Blockly.Ruby.ORDER_HIGH)||"([])",y=Blockly.Ruby.lists.getIndex_;if("LAST"!=o&&"FROM_END"!=o&&"RANDOM"!=o||e.match(/^\w+$/)){var u="GET"==R&&"FROM_END"==o?Blockly.Ruby.ORDER_ADDITIVE:Blockly.Ruby.ORDER_NONE,t=Blockly.Ruby.valueToCode(l,"AT",u)||"0";if(t=y(e,o,t),"GET"==R)return[c=e+"["+t+"]",Blockly.Ruby.ORDER_HIGH];c=e+".delete_at("+t+")";return"GET_REMOVE"==R?[c,Blockly.Ruby.ORDER_HIGH]:c+"\n"}if("REMOVE"==R){var u="FROM_END"==o?Blockly.Ruby.ORDER_ADDITIVE:Blockly.Ruby.ORDER_NONE,t=Blockly.Ruby.valueToCode(l,"AT",u)||"0",u=Blockly.Ruby.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME);return c=u+" = "+e+"\n"+u+".delete_at("+(t=y(u,o,t))+")\n"}var c,t=Blockly.Ruby.valueToCode(l,"AT",Blockly.Ruby.ORDER_NONE)||"1";return[c=("GET"==R?Blockly.Ruby.provideFunction_("list_get_"+o.toLowerCase(),["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(t"+("FROM_END"==o||"FROM_START"==o?", at)":")"),"  return t["+y("t",o,"at")+"]","end"]):Blockly.Ruby.provideFunction_("list_remove_"+o.toLowerCase(),["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(t"+("FROM_END"==o||"FROM_START"==o?", at)":")"),"  return t.delete_at("+y("t",o,"at")+")","end"]))+"("+e+("FROM_END"==o||"FROM_START"==o?", "+t:"")+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_setIndex=function(l){var R=Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_HIGH)||"[]",o=l.getFieldValue("MODE")||"SET",e=l.getFieldValue("WHERE")||"FROM_START",y=Blockly.Ruby.valueToCode(l,"AT",Blockly.Ruby.ORDER_ADDITIVE)||"0",u=Blockly.Ruby.valueToCode(l,"TO",Blockly.Ruby.ORDER_NONE)||"None",t=Blockly.Ruby.lists.getIndex_,c="";return"LAST"!=e&&"FROM_END"!=e&&"RANDOM"!=e||R.match(/^\w+$/)||(c=(l=Blockly.Ruby.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME))+" = "+R+"\n",R=l),(c+="SET"==o?R+"["+t(R,e,y)+"] = "+u:R+"["+t(R,e,y)+("LAST"==e?" + 1":"")+"] = "+u)+"\n"},Blockly.Ruby.lists_getSublist=function(l){var R=Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_NONE)||"[]",o=l.getFieldValue("WHERE1"),e=l.getFieldValue("WHERE2"),y=Blockly.Ruby.valueToCode(l,"AT1",Blockly.Ruby.ORDER_NONE)||"0",u=Blockly.Ruby.valueToCode(l,"AT2",Blockly.Ruby.ORDER_NONE)||"0",l=Blockly.Ruby.lists.getIndex_;return[Blockly.Ruby.provideFunction_("list_sublist_"+o.toLowerCase()+"_"+e.toLowerCase(),["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(source"+("FROM_END"==o||"FROM_START"==o?", at1":"")+("FROM_END"==e||"FROM_START"==e?", at2":"")+")","  start = "+l("source",o,"at1"),"  finish = "+l("source",e,"at2"),"  return source[start..finish]","end"])+"("+R+("FROM_END"==o||"FROM_START"==o?", "+y:"")+("FROM_END"==e||"FROM_START"==e?", "+u:"")+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_sort=function(l){var R=Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_NONE)||"[]",o="0"===l.getFieldValue("DIRECTION")?1:-1,l=l.getFieldValue("TYPE");return[Blockly.Ruby.provideFunction_("list_sort",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(list, typev, direction)","  arr = list","  compareFuncs = {","    NUMERIC: ->(a, b) do","      ((a.to_s).to_f or 0)","          < ((b.to_s).to_f or 0) end,","    TEXT: ->(a, b) do","      a.to_s < b.to_s end,","    IGNORE_CASE: ->(a, b) do","      a.to_s.downcase < b.to_s.downcase end","  }","  compareTemp = compareFuncs[typev.to_sym]","  compare = compareTemp","  if direction == -1","    compare = ->(a, b) do return compareTemp(b, a) end","  end","  arr.sort { |a, b| compare.call(a, b) }","  return arr","end"])+"("+R+',"'+l+'", '+o+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_split=function(l){var R=Blockly.Ruby.valueToCode(l,"INPUT",Blockly.Ruby.ORDER_NONE),o=Blockly.Ruby.valueToCode(l,"DELIM",Blockly.Ruby.ORDER_NONE)||"''",l=l.getFieldValue("MODE");if("SPLIT"==l)R=R||"''",Blockly.Ruby.provideFunction_("list_string_split",["def "+Blockly.Ruby.FUNCTION_NAME_PLACEHOLDER_+"(input, delim)","  return input.split(delim)","end"]);else{if("JOIN"!=l)throw Error("Unknown mode: "+l);R=R||"[]"}return[R+".join("+o+")",Blockly.Ruby.ORDER_HIGH]},Blockly.Ruby.lists_reverse=function(l){return["("+(Blockly.Ruby.valueToCode(l,"LIST",Blockly.Ruby.ORDER_NONE)||"[]")+").reverse",Blockly.Ruby.ORDER_HIGH]};
  
  // ruby/dragonruby.js
  Blockly.Ruby.gtk_state=function(l){return["$state",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_tick_count=function(l){return["$gtk.tick_count",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_argv=function(l){return["$gtk.argv",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_platform=function(l){return["$gtk.platform",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_request_quit=function(l){return"$gtk.request_quit\n"},Blockly.Ruby.gtk_write_file=function(l){return"$gtk.write_file("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"content",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_write_file_root=function(l){return"$gtk.write_file_root("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"content",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_read_file=function(l){return["$gtk.read_file("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_parse_xml=function(l){return["$gtk.parse_xml("+Blockly.Ruby.valueToCode(l,"string",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_parse_xml_file=function(l){return["$gtk.parse_xml_file("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_parse_json=function(l){return["$gtk.parse_json("+Blockly.Ruby.valueToCode(l,"string",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_parse_json_file=function(l){return["$gtk.parse_json_file("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_http_get=function(l){return["$gtk.http_get("+Blockly.Ruby.valueToCode(l,"url",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"extra_headers",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_http_post=function(l){return"$gtk.http_post("+Blockly.Ruby.valueToCode(l,"url",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"form_fields",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"extra_headers",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_reset=function(l){return"$gtk.reset\n"},Blockly.Ruby.gtk_stop_music=function(l){return"$gtk.stop_music\n"},Blockly.Ruby.gtk_calcstringbox=function(l){var o=Blockly.Ruby.valueToCode(l,"string",Blockly.Ruby.ORDER_ATOMIC),y=Blockly.Ruby.valueToCode(l,"size_enum",Blockly.Ruby.ORDER_ATOMIC),l=Blockly.Ruby.valueToCode(l,"font",Blockly.Ruby.ORDER_ATOMIC);return["$gtk.calcstringbox("+o+","+y+(""===l||"nil"===l?"":","+l)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_slowmo=function(l){return"$gtk.slowmo!("+Blockly.Ruby.valueToCode(l,"factor",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_notify=function(l){return"$gtk.notify!("+Blockly.Ruby.valueToCode(l,"msg",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_system=function(l){return"$gtk.system("+Blockly.Ruby.valueToCode(l,"command",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_exec=function(l){return["$gtk.exec("+Blockly.Ruby.valueToCode(l,"command",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_save_state=function(l){return"$gtk.save_state\n"},Blockly.Ruby.gtk_load_state=function(l){return"$gtk.load_state\n"},Blockly.Ruby.gtk_serialize=function(l){return"$gtk.serialize_state("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"state",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_deserialize=function(l){return["$gtk.deserialize_state("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_reset_sprite=function(l){return["$gtk.reset_sprite("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_show_cursor=function(l){return"$gtk.show_cursor\n"},Blockly.Ruby.gtk_hide_cursor=function(l){return"$gtk.hide_cursor\n"},Blockly.Ruby.gtk_cursor_shown=function(l){return["$gtk.cursor_shown?",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_set_window_fullscreen=function(l){return"$gtk.set_window_fullscreen("+Blockly.Ruby.valueToCode(l,"enabled",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.gtk_openurl=function(l){Blockly.Ruby.valueToCode(l,"url",Blockly.Ruby.ORDER_ATOMIC);return"$gtk.openurl("+enabled+")\n"},Blockly.Ruby.gtk_get_base_dir=function(l){return["$gtk.get_base_dir",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.gtk_get_game_dir=function(l){return["$gtk.get_game_dir",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.args_audio_play=function(l){var o=Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC);return"$gtk.args.audio["+Blockly.Ruby.valueToCode(l,"audio_name",Blockly.Ruby.ORDER_ATOMIC)+"] ||= {\n  path: "+o+",\n  x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+",\n  y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+",\n  z: "+Blockly.Ruby.valueToCode(l,"z",Blockly.Ruby.ORDER_ATOMIC)+",\n  gain: "+Blockly.Ruby.valueToCode(l,"gain",Blockly.Ruby.ORDER_ATOMIC)+",\n  pitch: "+Blockly.Ruby.valueToCode(l,"pitch",Blockly.Ruby.ORDER_ATOMIC)+",\n  paused: "+Blockly.Ruby.valueToCode(l,"paused",Blockly.Ruby.ORDER_ATOMIC)+",\n  looping: "+Blockly.Ruby.valueToCode(l,"looping",Blockly.Ruby.ORDER_ATOMIC)+"\n}\n"},Blockly.Ruby.kernel_tick_count=function(l){return["Kernel::tick_count",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.kernel_global_tick_count=function(l){return["Kernel::global_tick_count",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.numeric_frame_index=function(l){return[Blockly.Ruby.valueToCode(l,"variable",Blockly.Ruby.ORDER_ATOMIC)+".frame_index("+Blockly.Ruby.valueToCode(l,"number_of_sprites",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"frames_each_sprite",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"looping",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.numeric_created=function(l){return[Blockly.Ruby.valueToCode(l,"variable",Blockly.Ruby.ORDER_ATOMIC)+".created?",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.numeric_seconds=function(l){return[Blockly.Ruby.valueToCode(l,"variable",Blockly.Ruby.ORDER_ATOMIC)+".seconds",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.numeric_elapsed_time=function(l){return[Blockly.Ruby.valueToCode(l,"variable",Blockly.Ruby.ORDER_ATOMIC)+".elapsed_time",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.numeric_elapsed=function(l){return[Blockly.Ruby.valueToCode(l,"variable",Blockly.Ruby.ORDER_ATOMIC)+".elapsed_time?("+Blockly.Ruby.valueToCode(l,"time",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_compact=function(l){return[Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC)+".compact",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_reject_false=function(l){return[Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC)+".reject_false",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_product=function(l){return[Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC)+".product",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_includes=function(l){return[Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC)+".include_any?("+Blockly.Ruby.valueToCode(l,"element",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_intersect_rect=function(l){return[Blockly.Ruby.valueToCode(l,"arr1",Blockly.Ruby.ORDER_ATOMIC)+".intersect_rect?("+Blockly.Ruby.valueToCode(l,"arr2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.array_map2d=function(l){var o=Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC),y=Blockly.Ruby.nameDB_.getName(l.getFieldValue("row"),Blockly.Variables.NAME_TYPE),e=Blockly.Ruby.nameDB_.getName(l.getFieldValue("col"),Blockly.Variables.NAME_TYPE),u=Blockly.Ruby.nameDB_.getName(l.getFieldValue("tile"),Blockly.Variables.NAME_TYPE),l=Blockly.Ruby.statementToCode(l,"statements");return[o+".map_2d do |"+y+","+e+","+u+"|\n"+(l=Blockly.Ruby.addLoopTrap(l))+"\nend\n",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.grid_get=function(l){return["$gtk.args.grid."+l.getFieldValue("member"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.grid_set=function(l){return"$gtk.args.grid."+l.getFieldValue("member")+" = "+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+"\n"},Blockly.Ruby.grid_set_origin=function(l){return"$gtk.args.grid."+l.getFieldValue("origin")+"!\n"},Blockly.Ruby.string_wrapped_lines=function(l){return["$gtk.args.string.wrapped_lines("+Blockly.Ruby.valueToCode(l,"string",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"length",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.string_wrapped_lines_recur=function(l){return["$gtk.args.string.wrapped_lines_recur("+Blockly.Ruby.valueToCode(l,"string",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"rest",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"length",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"aggregate",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.layout_rect=function(l){return["$gtk.args.layout.rect({ col: "+Blockly.Ruby.valueToCode(l,"col",Blockly.Ruby.ORDER_ATOMIC)+", row: "+Blockly.Ruby.valueToCode(l,"row",Blockly.Ruby.ORDER_ATOMIC)+", w: "+Blockly.Ruby.valueToCode(l,"w",Blockly.Ruby.ORDER_ATOMIC)+", h: "+Blockly.Ruby.valueToCode(l,"h",Blockly.Ruby.ORDER_ATOMIC)+" })",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.state_created_at_elapsed=function(l){return["$gtk.args.state.created_at_elapsed",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.state_init_variable=function(l){return"$state."+l.getFieldValue("name")+" ||= "+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+"\n"},Blockly.Ruby.state_set_variable=function(l){return"$state."+l.getFieldValue("name")+" = "+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+"\n"},Blockly.Ruby.state_get_variable=function(l){return["$state."+l.getFieldValue("name"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.outputs_new_color=function(l){return["{ r: "+Blockly.Ruby.valueToCode(l,"r",Blockly.Ruby.ORDER_ATOMIC)+", g: "+Blockly.Ruby.valueToCode(l,"g",Blockly.Ruby.ORDER_ATOMIC)+", b: "+Blockly.Ruby.valueToCode(l,"b",Blockly.Ruby.ORDER_ATOMIC)+", a: "+Blockly.Ruby.valueToCode(l,"a",Blockly.Ruby.ORDER_ATOMIC)+" }",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.outputs_background_color=function(l){return"$gtk.args.outputs.background_color = ["+Blockly.Ruby.valueToCode(l,"r",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"g",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"b",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"a",Blockly.Ruby.ORDER_ATOMIC)+"]\n"},Blockly.Ruby.outputs_play_sound=function(l){return"$gtk.args.outputs.sounds << "+Blockly.JavaScript.valueToCode(l,"path",Blockly.JavaScript.ORDER_ATOMIC)+"\n"},Blockly.Ruby.outputs_solid=function(l){return"$gtk.args.outputs.primitives << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_solid\n"},Blockly.Ruby.outputs_border=function(l){return"$gtk.args.outputs.primitives << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_border\n"},Blockly.Ruby.outputs_line=function(l){return"$gtk.args.outputs.primitives << ("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_line\n"},Blockly.Ruby.outputs_label=function(l){return"$gtk.args.outputs.primitives << ({\n  x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+",\n  y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+",\n  text: "+Blockly.Ruby.valueToCode(l,"text",Blockly.Ruby.ORDER_ATOMIC)+",\n  size_enum: "+Blockly.Ruby.valueToCode(l,"size",Blockly.Ruby.ORDER_ATOMIC)+",\n  alignment_enum: "+Blockly.Ruby.valueToCode(l,"align",Blockly.Ruby.ORDER_ATOMIC)+",\n  vertical_alignment_enum: "+Blockly.Ruby.valueToCode(l,"valign",Blockly.Ruby.ORDER_ATOMIC)+",\n  font: "+Blockly.Ruby.valueToCode(l,"font",Blockly.Ruby.ORDER_ATOMIC)+"\n}).merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_label\n"},Blockly.Ruby.outputs_sprite=function(l){return"$gtk.args.outputs.primitives << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge({\n  path: "+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle: "+Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC)+"\n}).to_sprite\n"},Blockly.Ruby.outputs_sprite_ex=function(l){return"$gtk.args.outputs.primitives << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge({\n  path: "+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle: "+Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC)+"\n}).merge("+Blockly.Ruby.valueToCode(l,"source_rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_sprite\n"},Blockly.Ruby.outputs_sprite_full=function(l){var o=Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC),y=Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC),e=Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC),u=Blockly.Ruby.valueToCode(l,"angle_anchor_x",Blockly.Ruby.ORDER_ATOMIC),R=Blockly.Ruby.valueToCode(l,"angle_anchor_y",Blockly.Ruby.ORDER_ATOMIC),c=Blockly.Ruby.valueToCode(l,"source_rect",Blockly.Ruby.ORDER_ATOMIC),t=Blockly.Ruby.valueToCode(l,"tile_rect",Blockly.Ruby.ORDER_ATOMIC);return"$gtk.args.outputs.primitives << ("+o+").merge({\n  path: "+y+",\n  angle: "+e+",\n  flip_horizontally: "+Blockly.Ruby.valueToCode(l,"hflip",Blockly.Ruby.ORDER_ATOMIC)+",\n  flip_vertically: "+Blockly.Ruby.valueToCode(l,"vflip",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle_anchor_x: "+u+",\n  angle_anchor_y: "+R+"\n}).merge("+c+").merge("+t+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_sprite\n"},Blockly.Ruby.outputs_screenshot=function(l){return"$gtk.args.outputs.screenshots << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge({ path: "+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+" }).merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.debug_solid=function(l){return"$gtk.args.outputs.debug << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_solid\n"},Blockly.Ruby.debug_border=function(l){return"$gtk.args.outputs.debug << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_border\n"},Blockly.Ruby.debug_line=function(l){return"$gtk.args.outputs.debug << ("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_line\n"},Blockly.Ruby.debug_label=function(l){return"$gtk.args.outputs.debug << ({\n  x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+",\n  y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+",\n  text: "+Blockly.Ruby.valueToCode(l,"text",Blockly.Ruby.ORDER_ATOMIC)+",\n  size_enum: "+Blockly.Ruby.valueToCode(l,"size",Blockly.Ruby.ORDER_ATOMIC)+",\n  alignment_enum: "+Blockly.Ruby.valueToCode(l,"align",Blockly.Ruby.ORDER_ATOMIC)+",\n  vertical_alignment_enum: "+Blockly.Ruby.valueToCode(l,"valign",Blockly.Ruby.ORDER_ATOMIC)+",\n  font: "+Blockly.Ruby.valueToCode(l,"font",Blockly.Ruby.ORDER_ATOMIC)+"\n}).merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_label\n"},Blockly.Ruby.debug_sprite=function(l){return"$gtk.args.outputs.debug << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge({\n  path: "+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle: "+Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC)+"\n}).to_sprite\n"},Blockly.Ruby.debug_sprite_ex=function(l){return"$gtk.args.outputs.debug << ("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+").merge({\n  path: "+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle: "+Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC)+"\n}).merge("+Blockly.Ruby.valueToCode(l,"source_rect",Blockly.Ruby.ORDER_ATOMIC)+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_sprite\n"},Blockly.Ruby.debug_sprite_full=function(l){var o=Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC),y=Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC),e=Blockly.Ruby.valueToCode(l,"angle",Blockly.Ruby.ORDER_ATOMIC),u=Blockly.Ruby.valueToCode(l,"angle_anchor_x",Blockly.Ruby.ORDER_ATOMIC),R=Blockly.Ruby.valueToCode(l,"angle_anchor_y",Blockly.Ruby.ORDER_ATOMIC),c=Blockly.Ruby.valueToCode(l,"source_rect",Blockly.Ruby.ORDER_ATOMIC),t=Blockly.Ruby.valueToCode(l,"tile_rect",Blockly.Ruby.ORDER_ATOMIC);return"$gtk.args.outputs.debug << ("+o+").merge({\n  path: "+y+",\n  angle: "+e+",\n  flip_horizontally: "+Blockly.Ruby.valueToCode(l,"hflip",Blockly.Ruby.ORDER_ATOMIC)+",\n  flip_vertically: "+Blockly.Ruby.valueToCode(l,"vflip",Blockly.Ruby.ORDER_ATOMIC)+",\n  angle_anchor_x: "+u+",\n  angle_anchor_y: "+R+"\n}).merge("+c+").merge("+t+").merge("+Blockly.Ruby.valueToCode(l,"color",Blockly.Ruby.ORDER_ATOMIC)+").to_sprite\n"},Blockly.Ruby.easing_ease=function(l){return["$gtk.args.easing.ease("+Blockly.Ruby.valueToCode(l,"start_tick",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"current_tick",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"duration",Blockly.Ruby.ORDER_ATOMIC)+",:"+l.getFieldValue("ease_func")+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.easing_ease_spline=function(l){return["$gtk.args.easing.ease_spline("+Blockly.Ruby.valueToCode(l,"start_tick",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"current_tick",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"duration",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"spline",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_new_rect=function(l){return["{ x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+", y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+", w: "+Blockly.Ruby.valueToCode(l,"w",Blockly.Ruby.ORDER_ATOMIC)+", h: "+Blockly.Ruby.valueToCode(l,"h",Blockly.Ruby.ORDER_ATOMIC)+" }",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_new_src_rect=function(l){return["{ source_x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+", source_y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+", source_w: "+Blockly.Ruby.valueToCode(l,"w",Blockly.Ruby.ORDER_ATOMIC)+", source_h: "+Blockly.Ruby.valueToCode(l,"h",Blockly.Ruby.ORDER_ATOMIC)+" }",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_new_tile_rect=function(l){return["{ tile_x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+", tile_y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+", tile_w: "+Blockly.Ruby.valueToCode(l,"w",Blockly.Ruby.ORDER_ATOMIC)+", tile_h: "+Blockly.Ruby.valueToCode(l,"h",Blockly.Ruby.ORDER_ATOMIC)+" }",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_new_line=function(l){return["{ x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+", y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+", x2: "+Blockly.Ruby.valueToCode(l,"x2",Blockly.Ruby.ORDER_ATOMIC)+", y2: "+Blockly.Ruby.valueToCode(l,"y2",Blockly.Ruby.ORDER_ATOMIC)+" }",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_new_point=function(l){return["{ x: "+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+", y: "+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+"}",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_inside_rect=function(l){return["$gtk.args.geometry.inside_rect?("+Blockly.Ruby.valueToCode(l,"r1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"r2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_intersect_rect=function(l){return["$gtk.args.geometry.intersect_rect?("+Blockly.Ruby.valueToCode(l,"r1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"r2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_scale_rect_array=function(l){return[Blockly.Ruby.valueToCode(l,"array",Blockly.Ruby.ORDER_ATOMIC)+".scale_rect("+Blockly.Ruby.valueToCode(l,"ratio",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"anchor_x",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"anchor_y",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_scale_rect=function(l){return["$gtk.args.geometry.scale_rect("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"xper",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"yper",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_angle_to=function(l){return["$gtk.args.geometry.angle_to("+Blockly.Ruby.valueToCode(l,"start_point",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"end_point",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_angle_from=function(l){return["$gtk.args.geometry.angle_from("+Blockly.Ruby.valueToCode(l,"start_point",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"end_point",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_point_inside_circle=function(l){return["$gtk.args.geometry.point_inside_circle?("+Blockly.Ruby.valueToCode(l,"point",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"circle_center_point",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"radius",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_center_inside_rect=function(l){return["$gtk.args.geometry.center_inside_rect("+Blockly.Ruby.valueToCode(l,"r1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"r2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_center_inside_rect_x=function(l){return["$gtk.args.geometry.center_inside_rect_x("+Blockly.Ruby.valueToCode(l,"r1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"r2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_center_inside_rect_y=function(l){return["$gtk.args.geometry.center_inside_rect_y("+Blockly.Ruby.valueToCode(l,"r1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"r2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_anchor_rect=function(l){return["$gtk.args.geometry.anchor_rect("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"anchor_x",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"anchor_y",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_shift_line=function(l){return["$gtk.args.geometry.shift_line("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"x",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"y",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_line_y_intercept=function(l){return["$gtk.args.geometry.line_y_intercept("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_angle_between_lines=function(l){return["$gtk.args.geometry.angle_between_lines("+Blockly.Ruby.valueToCode(l,"line1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"line2",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"infinity_replacement",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_line_slope=function(l){return["$gtk.args.geometry.line_slope("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+","+ +Blockly.Ruby.valueToCode(l,"infinity_replacement",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_line_rise_run=function(l){return["$gtk.args.geometry.line_rise_run("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_ray_test=function(l){return["$gtk.args.geometry.ray_test("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"point",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_line_rect=function(l){return["$gtk.args.geometry.line_rect("+Blockly.Ruby.valueToCode(l,"line",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_line_intersect=function(l){return["$gtk.args.geometry.line_intersect ("+Blockly.Ruby.valueToCode(l,"line1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"line2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_distance=function(l){return["$gtk.args.geometry.distance("+Blockly.Ruby.valueToCode(l,"point1",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"point2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.geometry_cubic_bezier=function(l){return["$gtk.args.geometry.cubic_bezier("+Blockly.Ruby.valueToCode(l,"t",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"a",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"b",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"c",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"d",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.touch_finger_down=function(l){return["!$gtk.args.inputs.touch."+l.getFieldValue("finger")+".nil?",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.touch_finger_x=function(l){return["$gtk.args.inputs.touch."+l.getFieldValue("finger")+".x",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.touch_finger_y=function(l){return["$gtk.args.inputs.touch."+l.getFieldValue("finger")+".y",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.touch_foreach_touches=function(l){var o=Blockly.Ruby.nameDB_.getName(l.getFieldValue("index"),Blockly.Variables.NAME_TYPE),y=Blockly.Ruby.nameDB_.getName(l.getFieldValue("touch"),Blockly.Variables.NAME_TYPE),l=Blockly.Ruby.statementToCode(l,"statements");return"$gtk.args.inputs.touch.each do |"+o+","+y+"|\n"+(l=Blockly.Ruby.addLoopTrap(l))+"\nend\n"},Blockly.Ruby.mouse_button_state=function(l){var o=l.getFieldValue("button"),l="$gtk.args.inputs.mouse."+l.getFieldValue("state");return"any"!=o&&(l+=" && $gtk.args.inputs.mouse."+o),[l,Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.mouse_moving=function(l){l.getFieldValue("finger");return["$gtk.args.inputs.mouse.moved",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.mouse_get=function(l){return["$gtk.args.inputs.mouse."+l.getFieldValue("member"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.mouse_inside_rect=function(l){return["$gtk.args.inputs.mouse.inside_rect?("+Blockly.Ruby.valueToCode(l,"rect",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.mouse_inside_circle=function(l){return["$gtk.args.inputs.mouse.inside_circle?("+Blockly.Ruby.valueToCode(l,"circle_center",Blockly.Ruby.ORDER_ATOMIC)+","+Blockly.Ruby.valueToCode(l,"radius",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.joystick_connected=function(l){return["!$gtk.args.inputs."+l.getFieldValue("joystick")+".nil?",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.joystick_button_state=function(l){var o=l.getFieldValue("joystick"),y=l.getFieldValue("button");return["$gtk.args.inputs."+o+"."+l.getFieldValue("state")+"."+y,Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.joystick_analog_state=function(l){return["$gtk.args.inputs."+l.getFieldValue("joystick")+"."+l.getFieldValue("analog")+"_"+l.getFieldValue("analog_property"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.joystick_direction_state=function(l){var o=l.getFieldValue("direction");return["$gtk.args.inputs."+l.getFieldValue("joystick")+"."+o,Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.keyboard_key_state=function(l){var o=l.getFieldValue("key");return["$gtk.args.inputs.keyboard."+l.getFieldValue("state")+"."+o,Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.keyboard_ctrl_state=function(l){var o=l.getFieldValue("key");return["$gtk.args.inputs.keyboard."+l.getFieldValue("state")+".ctrl_"+o,Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.keyboard_direction_state=function(l){return["$gtk.args.inputs.keyboard."+l.getFieldValue("direction"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.keyboard_char_keys=function(l){return["$gtk.args.inputs.text",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.require=function(l){return"require("+Blockly.Ruby.valueToCode(l,"path",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.eval=function(l){return"eval("+Blockly.Ruby.valueToCode(l,"code",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.to_a=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_a",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.to_f=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_f",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.to_h=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_h",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.to_i=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_i("+Blockly.Ruby.valueToCode(l,"base",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.to_s=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_s("+Blockly.Ruby.valueToCode(l,"base",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.to_sym=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".to_sym",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.as_hash=function(l){return[Blockly.Ruby.valueToCode(l,"var",Blockly.Ruby.ORDER_ATOMIC)+".as_hash",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_new=function(l){return["{}",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_sym=function(l){return[":"+l.getFieldValue("sym"),Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_get=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".fetch("+Blockly.Ruby.valueToCode(l,"key",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_set=function(l){return Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+"["+Blockly.Ruby.valueToCode(l,"key",Blockly.Ruby.ORDER_ATOMIC)+"] = "+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+"\n"},Blockly.Ruby.hash_clear=function(l){return Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".clear\n"},Blockly.Ruby.hash_delete_noreturn=function(l){return Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".delete("+Blockly.Ruby.valueToCode(l,"key",Blockly.Ruby.ORDER_ATOMIC)+")\n"},Blockly.Ruby.hash_delete=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".delete("+Blockly.Ruby.valueToCode(l,"key",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_empty=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".empty?",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_key_exist=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".key?("+Blockly.Ruby.valueToCode(l,"key",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_value_exist=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".value?("+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_length=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".length",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_each=function(l){var o=Blockly.Lua.valueToCode(l,"hash",Blockly.Lua.ORDER_ATOMIC),y=Blockly.Lua.nameDB_.getName(l.getFieldValue("key"),Blockly.Variables.NAME_TYPE),e=Blockly.Lua.nameDB_.getName(l.getFieldValue("value"),Blockly.Variables.NAME_TYPE),l=Blockly.Lua.statementToCode(l,"statements");return o+".each do |"+y+","+e+"|\n"+(l=Blockly.Ruby.addLoopTrap(l))+"\nend\n"},Blockly.Ruby.hash_hash=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".hash",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_keys=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".keys",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_values=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".values",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_deleteif_noreturn=function(l){return Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".delete_if do |"+Blockly.Ruby.nameDB_.getName(l.getFieldValue("key"),Blockly.Variables.NAME_TYPE)+","+Blockly.Ruby.nameDB_.getName(l.getFieldValue("value"),Blockly.Variables.NAME_TYPE)+"|\n"+Blockly.Ruby.valueToCode(l,"condition",Blockly.Ruby.ORDER_ATOMIC)+"\nend\n"},Blockly.Ruby.hash_deleteif=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".delete_if do |"+Blockly.Ruby.nameDB_.getName(l.getFieldValue("key"),Blockly.Variables.NAME_TYPE)+","+Blockly.Ruby.nameDB_.getName(l.getFieldValue("value"),Blockly.Variables.NAME_TYPE)+"|\n"+Blockly.Ruby.valueToCode(l,"condition",Blockly.Ruby.ORDER_ATOMIC)+"\nend",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_keepif_noreturn=function(l){return Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".keep_if do |"+Blockly.Ruby.nameDB_.getName(l.getFieldValue("key"),Blockly.Variables.NAME_TYPE)+","+Blockly.Ruby.nameDB_.getName(l.getFieldValue("value"),Blockly.Variables.NAME_TYPE)+"|\n"+Blockly.Ruby.valueToCode(l,"condition",Blockly.Ruby.ORDER_ATOMIC)+"\nend\n"},Blockly.Ruby.hash_keepif=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".keep_if do |"+Blockly.Ruby.nameDB_.getName(l.getFieldValue("key"),Blockly.Variables.NAME_TYPE)+","+Blockly.Ruby.nameDB_.getName(l.getFieldValue("value"),Blockly.Variables.NAME_TYPE)+"|\n"+Blockly.Ruby.valueToCode(l,"condition",Blockly.Ruby.ORDER_ATOMIC)+"\nend",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_key_by_value=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".key("+Blockly.Ruby.valueToCode(l,"value",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_merge_noreturn=function(l){return Blockly.Ruby.valueToCode(l,"hash1",Blockly.Ruby.ORDER_ATOMIC)+".merge!("+Blockly.Ruby.valueToCode(l,"hash2",Blockly.Ruby.ORDER_ATOMIC)+")"},Blockly.Ruby.hash_merge=function(l){return[Blockly.Ruby.valueToCode(l,"hash1",Blockly.Ruby.ORDER_ATOMIC)+".merge("+Blockly.Ruby.valueToCode(l,"hash2",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_invert=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".invert",Blockly.Ruby.ORDER_ATOMIC]},Blockly.Ruby.hash_flatten=function(l){return[Blockly.Ruby.valueToCode(l,"hash",Blockly.Ruby.ORDER_ATOMIC)+".flatten("+Blockly.Ruby.valueToCode(l,"level",Blockly.Ruby.ORDER_ATOMIC)+")",Blockly.Ruby.ORDER_ATOMIC]};
  
  return Blockly.Ruby;
}));
